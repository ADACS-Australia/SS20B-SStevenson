version: "3"

services:
  django:
    build:
      context: .
      dockerfile: docker/django.Dockerfile
    container_name: django
    environment:
      - DEBUG=False
      - ROOT_SUBDIRECTORY_PATH=${ROOT_SUBDIRECTORY_PATH}
      - COMPAS_HOST=${COMPAS_HOST}
    volumes:
      - ./src/static:/code/static-files
      - ./files:/files
    command: >
      bash -c "python manage.py migrate
      && python manage.py collectstatic --noinput
      && python manage.py loaddata compasweb/fixtures/test_data.json
      && gunicorn --bind=0.0.0.0:8000 compas.wsgi:application"
    ports:
      - "8000"
  nginx:
    build:
      context: .
      dockerfile: docker/nginx.Dockerfile
    ports:
      - "8080:80"
    container_name: nginx
    depends_on:
      - django
    environment:
      - ROOT_SUBDIRECTORY_PATH=${ROOT_SUBDIRECTORY_PATH}
    volumes:
      - ./src/static:/static
      - ./files:/files
  bokeh:
    build:
      context: .
      dockerfile: docker/bokeh.Dockerfile
    ports:
      - "5006"
    container_name: bokeh
    environment:
      - ROOT_SUBDIRECTORY_PATH
    volumes:
      # note: the mount point has to be the same as in the django container for path resolution to hdf5 fileys to work properly
      - ./files:/files/
    command: >
      bash -c 'bokeh serve --prefix=$${ROOT_SUBDIRECTORY_PATH}/bokeh --allow-websocket-origin="*" compas_hexbinplot.py'
  redis:
    image: redis:latest
    container_name: redis_server
    ports:
      - '6379:6379'
  celery:
    build: 
      context: .
      dockerfile: docker/django.Dockerfile
    restart: always
    environment: 
      - CELERY_BROKER_URL:${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND:${CELERY_RESULT_BACKEND}
    command: celery -A compas worker -l info
    volumes:
      - ./files:/files/
      - ./src:/code/
    depends_on:
      - redis
      - django
    links: 
      - redis
      - django
