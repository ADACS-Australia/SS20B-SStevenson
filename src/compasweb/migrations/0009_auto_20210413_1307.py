# Generated by Django 2.2.14 on 2021-04-13 03:07

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('compasweb', '0008_auto_20210325_1323'),
    ]

    operations = [
        migrations.AddField(
            model_name='compasmodelrun',
            name='common_envelope_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='compasmodelrun',
            name='kick_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='compasmodelrun',
            name='mass_transfer_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='compasmodelrun',
            name='supernova_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='Kick_velocity_distribution',
            field=models.CharField(choices=[('ZERO', 'ZERO'), ('FIXED', 'FIXED'), ('FLAT', 'FLAT'), ('MAXWELLIAN', 'MAXWELLIAN'), ('BRAYELDRIDGE', 'BRAYELDRIDGE'), ('MULLER2016', 'MULLER2016'), ('MULLER2016MAXWELLIAN', 'MULLER2016MAXWELLIAN'), ('MULLERMANDEL', 'MULLERMANDEL')], default='MAXWELLIAN', help_text='--kick-magnitude-distribution: Natal kick magnitude distribution', max_length=55),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='black_hole_kicks',
            field=models.CharField(choices=[('FALLBACK', 'FALLBACK'), ('FULL', 'FULL'), ('REDUCED', 'REDUCED'), ('ZERO', 'ZERO')], default='FALLBACK', help_text='--black-hole-kicks: Black hole kicks relative to NS kicks', max_length=55),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='common_envelope_alpha',
            field=models.FloatField(default=1.0, help_text='--common-envelope-alpha: Common Envelope efficiency alpha, Value > 0', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='common_envelope_lambda',
            field=models.FloatField(default=0.1, help_text='--common-envelope-lambda: Common Envelope lambda, Value > 0', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='common_envelope_lambda_prescription',
            field=models.CharField(choices=[('LAMBDA_FIXED', 'LAMBDA_FIXED'), ('LAMBDA_KRUCKOW', 'LAMBDA_KRUCKOW'), ('LAMBDA_LOVERIDGE', 'LAMBDA_LOVERIDGE'), ('LAMBDA_NANJING', 'LAMBDA_NANJING'), ('LAMBDA_DEWI', 'LAMBDA_DEWI')], default='LAMBDA_NANJING', help_text='--common-envelope-lambda-prescription: CE lambda prescription', max_length=55),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='fryer_supernova_engine',
            field=models.CharField(choices=[('DELAYED', 'DELAYED'), ('RAPID', 'RAPID')], default='DELAYED', help_text='--fryer-supernova-engine: Supernova engine type if using the fallback prescription from Fryer et al. (2012)', max_length=55),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='kick_velocity_sigma_CCSN_BH',
            field=models.FloatField(default=256.0, help_text='--kick-magnitude-sigma-CCSN-BH: Sigma for chosen kick magnitude distribution for black holes (km s − 1 ), Value > 0', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='kick_velocity_sigma_CCSN_NS',
            field=models.FloatField(default=250.0, help_text='--kick-magnitude-sigma-CCSN-NS: Sigma for chosen kick magnitude distribution for neutron stars (km s − 1 ), Value > 0', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='kick_velocity_sigma_ECSN',
            field=models.FloatField(default=30.0, help_text='--kick-magnitude-sigma-ECSN: Sigma for chosen kick magnitude distribution for ECSN (km s − 1 ), Value > 0', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='kick_velocity_sigma_USSN',
            field=models.FloatField(default=30.0, help_text='--kick-magnitude-sigma-USSN: Sigma for chosen kick magnitude distribution for USSN (km s − 1 ), Value > 0', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='mass_transfer_accertion_efficiency_prescription',
            field=models.CharField(choices=[('THERMAL', 'THERMAL'), ('FIXED', 'FIXED')], default='THERMAL', help_text='--mass-transfer-accretion-efficiency-prescription: Mass transfer accretion efficiency prescription', max_length=55),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='mass_transfer_angular_momentum_loss_prescription',
            field=models.CharField(choices=[('ARBITRARY', 'ARBITRARY'), ('ISOTROPIC', 'ISOTROPIC'), ('JEANS', 'JEANS'), ('CIRCUMBINARY', 'CIRCUMBINARY')], default='ISOTROPIC', help_text='--mass-transfer-angular-momentum-loss-prescription: Mass Transfer Angular Momentum Loss prescription', max_length=55),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='mass_transfer_fa',
            field=models.FloatField(default=0.5, help_text='--mass-transfer-fa: Mass Transfer fraction accreted in FIXED prescription', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='mass_transfer_jloss',
            field=models.FloatField(default=1.0, help_text='--mass-transfer-jloss: Specific angular momentum with which the non-accreted system leaves the system', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='maximum_neutron_star_mass',
            field=models.FloatField(default=3.0, help_text='--maximum-neutron-star-mass: Maximum mass of a neutron star, Value > 0', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='mean_anomaly_1',
            field=models.FloatField(blank=True, help_text='--kick-mean-anomaly-1: The mean anomaly at the instant of the supernova for the primary star of a binary system when evolving in BSE mode, should it undergo a supernova event, 0 < Value < 2pi', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(6.283185307179586)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='mean_anomaly_2',
            field=models.FloatField(blank=True, help_text='--kick-mean-anomaly-2: The mean anomaly at the instant of the supernova for the secondary star of a binary system when evolving in BSE mode, should it undergo a supernova event, 0 < Value < 2pi', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(6.283185307179586)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='pair_instability_supernovae',
            field=models.BooleanField(default=True, help_text='--pair-instability-supernovae: Enable pair instability supernovae (PISN)'),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='phi_1',
            field=models.FloatField(blank=True, help_text='--kick-phi-1: The angle between ’x’ and ’y’, both in the orbital plane of the supernova vector, for the for the primary star of a binary system when evolving in BSE mode, should it undergo a supernova event (radians), 0 < Value < 2pi', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(6.283185307179586)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='phi_2',
            field=models.FloatField(blank=True, help_text='--kick-phi-2: The angle between ’x’ and ’y’, both in the orbital plane of the supernova vector, for the for the seocndary star of a binary system when evolving in BSE mode, should it undergo a supernova event (radians), 0 < Value < 2pi', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(6.283185307179586)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='pisn_lower_limit',
            field=models.FloatField(default=60.0, help_text='--pisn-lower-limit: Minimum core mass for PISN, Value > 0', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='pisn_upper_limit',
            field=models.FloatField(default=135.0, help_text='--pisn-upper-limit: Maximum core mass for PISN, 0 < Value >  --pisn-lower-limit', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='ppi_lower_limit',
            field=models.FloatField(default=35.0, help_text='--pisn-lower-limit: Minimum core mass for PPI, Value > 0', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='ppi_upper_limit',
            field=models.FloatField(default=60.0, help_text='--pisn-upper-limit: Maximum core mass for PPI, 0 < Value > --pisn-lower-limit', validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='pulsational_pair_instability_prescription',
            field=models.CharField(choices=[('COMPAS', 'COMPAS'), ('STARTRACK', 'STARTRACK'), ('MARCHANT', 'MARCHANT')], default='MARCHANT', help_text='--pulsational-pair-instability-prescription: Pulsational pair instability prescription', max_length=55),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='pulsational_pair_instability_supernovae',
            field=models.BooleanField(default=True, help_text='--pulsational-pair-instability: Enable mass loss due to pulsational-pair-instability (PPI)'),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='remnant_mass_prescription',
            field=models.CharField(choices=[('HURLEY2000', 'HURLEY2000'), ('BELCZYNSKI2002', 'BELCZYNSKI2002'), ('FRYER2012', 'FRYER2012'), ('MULLER2016', 'MULLER2016'), ('MULLERMANDEL', 'MULLERMANDEL')], default='FRYER2012', help_text='--remnant-mass-prescription: Remnant mass prescription', max_length=55),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='theta_1',
            field=models.FloatField(blank=True, help_text='--kick-theta-1: The angle between the orbital plane and the ’z’ axis of the supernova vector for the for the primary star of a binary system when evolving in BSE mode, should it undergo a supernova event (radians), 0 < Value < 2pi', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(6.283185307179586)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='theta_2',
            field=models.FloatField(blank=True, help_text='--kick-theta-2: The angle between the orbital plane and the ’z’ axis of the supernova vector for the for the secondary star of a binary system when evolving in BSE mode, should it undergo a supernova event (radians), 0 < Value < 2pi', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(6.283185307179586)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='velocity_1',
            field=models.FloatField(blank=True, default=0.0, help_text='--kick-magnitude-1(Velocity1): Value to be used as the (drawn) kick magnitude for the primary star of a binary system when evolving in BSE mode, should the star undergo a supernova event (km s −1 ), Value > 0', null=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='velocity_2',
            field=models.FloatField(blank=True, default=0.0, help_text='--kick-magnitude-2(Velocity2): Value to be used as the (drawn) kick magnitude for the secondary star of a binary system when evolving in BSE mode, should the star undergo a supernova event (km s −1 ), Value > 0', null=True, validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='velocity_random_number_1',
            field=models.FloatField(blank=True, help_text='--kick-magnitude-random-1: Value to be used to draw the kick magnitude for the primary star of a binary system when evolving in BSE mode, should the star undergo a supernova event, 0 < Value < 1', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
        migrations.AlterField(
            model_name='compasmodelrun',
            name='velocity_random_number_2',
            field=models.FloatField(blank=True, help_text='--kick-magnitude-random-2: Value to be used to draw the kick magnitude for the secondary star of a binary system when evolving in BSE mode, should the star undergo a supernova event, 0 < Value < 1', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)]),
        ),
    ]
